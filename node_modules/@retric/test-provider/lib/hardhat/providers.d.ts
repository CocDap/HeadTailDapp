import { providers } from "ethers";
import { TransactionResponse } from "@ethersproject/abstract-provider";
import { ConnectionInfo } from "@ethersproject/web";
import { Networkish } from "@ethersproject/networks";
import { Abi, AbiItems } from "../abi";
import { Godwoker, GodwokerOption } from "../util";
export interface PolyjuiceJsonRpcProvider extends providers.JsonRpcProvider {
    constructor(godwoker_option: GodwokerOption, abi: AbiItems, url?: ConnectionInfo | string, network?: Networkish): any;
}
export declare class PolyjuiceJsonRpcProvider extends providers.JsonRpcProvider {
    abi: Abi;
    godwoker: Godwoker;
    constructor(godwoker_option: GodwokerOption, abi_items?: AbiItems, url?: ConnectionInfo | string, network?: Networkish);
    sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;
    send(method: string, params: Array<any>): Promise<any>;
    prepareRequest(method: string, params: any): [string, Array<any>];
}
declare const _default: {
    PolyjuiceJsonRpcProvider: typeof PolyjuiceJsonRpcProvider;
};
export default _default;
