import { providers } from "ethers";
import { TransactionResponse } from "@ethersproject/abstract-provider";
import { ConnectionInfo } from "@ethersproject/web";
import { Networkish } from "@ethersproject/networks";
import { Godwoker, Abi, AbiItems } from "@polyjuice-provider/base";
export declare type PolyjuiceConfig = {
    rollupTypeHash: string;
    ethAccountLockCodeHash: string;
    abiItems?: AbiItems;
    web3Url?: string;
};
export interface PolyjuiceJsonRpcProvider extends providers.JsonRpcProvider {
    constructor(polyjuiceConfig: PolyjuiceConfig, url?: ConnectionInfo | string, network?: Networkish): any;
}
export declare class PolyjuiceJsonRpcProvider extends providers.JsonRpcProvider {
    abi: Abi;
    godwoker: Godwoker;
    constructor(polyjuice_config: PolyjuiceConfig, url?: ConnectionInfo | string, network?: Networkish);
    setAbi(abiItems: AbiItems): void;
    sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;
    send(method: string, params: Array<any>): Promise<any>;
    prepareRequest(method: string, params: any): [string, Array<any>];
}
declare const _default: {
    PolyjuiceJsonRpcProvider: typeof PolyjuiceJsonRpcProvider;
};
export default _default;
