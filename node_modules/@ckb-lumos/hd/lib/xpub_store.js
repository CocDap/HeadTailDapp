"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.XPubStore = void 0;
const extended_key_1 = require("./extended_key");
const fs_1 = __importDefault(require("fs"));
class XPubStore {
    constructor(accountExtendedPublicKey) {
        this.accountExtendedPublicKey = accountExtendedPublicKey;
    }
    toAccountExtendedPublicKey() {
        return this.accountExtendedPublicKey;
    }
    save(path, { overwrite = false, } = {}) {
        if (!overwrite && fs_1.default.existsSync(path)) {
            throw new Error("XPub file already exists!");
        }
        fs_1.default.writeFileSync(path, this.toJson());
    }
    toJson() {
        return JSON.stringify({
            xpubkey: this.accountExtendedPublicKey.serialize().slice(2),
        });
    }
    static load(path) {
        const json = fs_1.default.readFileSync(path, "utf-8");
        const xpub = JSON.parse(json).xpubkey;
        const accountExtendedPublicKey = extended_key_1.AccountExtendedPublicKey.parse("0x" + xpub);
        return new XPubStore(accountExtendedPublicKey);
    }
}
exports.XPubStore = XPubStore;
//# sourceMappingURL=xpub_store.js.map